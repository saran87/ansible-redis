---
- name: create redis working directory
  file: path={{ redis_dir }} state=directory
        recurse=yes
        owner={{ redis_user }}

- name: create redis init script
  template: src="{{ item }}" dest=/etc/init.d/{{redis_service_name}}
            mode=0755
  # Choose the distro-specific template. We must specify the templates
  # path here because with_first_found tries to find files in files/
  with_first_found:
    - files:
      - "{{ ansible_os_family }}/redis.init.j2"
      - default/redis.init.j2
      paths:
        - ../templates
  when: redis_as_service and not use_systemd

- name: create redis systemd service
  template: src="../templates/redis.service.j2" dest=/etc/systemd/system/{{ redis_service_name }}
  when: redis_as_service and use_systemd

- name: set redis to start at boot
  service: name={{ redis_service_name }} enabled=yes
  when: redis_as_service and use_systemd

- name: check if log file exists
  stat: path={{ redis_logfile }}
  register: logfile_stat

- name: ensure pidfile directory exists and has correct owner
  file: path={{ redis_pidfile|dirname }}
        owner={{ redis_user }}
        state=directory
        recurse=yes
  when: not use_systemd

- name: ensure logfile directory exists and has correct owner
  file: path={{ redis_logfile|dirname }}
        owner={{ redis_user }}
        state=directory
        recurse=yes
  when: redis_logfile != '""'

- name: ensure that log file exists and is writable by redis
  file: path={{ redis_logfile }}
        owner={{ redis_user }}
        group={{ redis_user }}
        mode=0600
        state=touch
  when: logfile_stat.stat.exists == False and redis_logfile != '""'

- name: create redis config file
  template: src=redis.conf.j2 dest={{ redis_conf_file }}
            owner={{ redis_user }}
  notify: restart redis

- name: add redis init config file
  template: dest="/etc/sysconfig/{{redis_service_name}}"
            src=redis.init.conf.j2
            mode=0600
  when: ansible_os_family == "RedHat" and not use_systemd
  notify: restart redis

- name: add redis init config file
  template: dest="/etc/default/{{redis_service_name}}"
            src=redis.init.conf.j2
            mode=0600
  when: ansible_os_family == "Debian" and not use_systemd
  notify: restart redis

# Flush handlers before ensuring the service is started to prevent
# a start and then restart
- name: flush handlers to apply config changes
  meta: flush_handlers

- name: ensure redis is running
  service: name={{ redis_service_name }} state=started
  when: redis_as_service
